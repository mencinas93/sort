# INSERTION-SORT
def insertion_sort(A):
    for i in range(1, len(A)):
        print(f"-------- i={i} --------")
        key = A[i]
        j = i - 1

        # Move elements of A[0..i-1] that are greater than key to one position ahead of their current position
        while j >= 0 and key < A[j]:
            print(f"key < A[{j}] ({key} < {A[j]}), move left")
            A[j + 1] = A[j]
            j -= 1

        A[j + 1] = key
        print("Result of current iteration:", A)

**Run an example.**

# Example usage:
arr = [38, 27, 43, 3, 9, 82, 10]
print("Original Array:", arr)

insertion_sort(arr)
print("Sorted Array:", arr)

**Explanation.**

Let me walk you through the example with the array [38, 27, 43, 3, 9, 82, 10]:

1.   Initial Array: [38, 27, 43, 3, 9, 82, 10]
2.   i = 1: Insert 27 into its correct position, resulting in [**27, 38**, 43, 3, 9, 82, 10]
3.   i = 2: Insert 43 into its correct position, resulting in [**27, 38, 43**, 3, 9, 82, 10] (no change)
4.   i = 3: Insert 3 into its correct position, resulting in [**3, 27, 38, 43**, 9, 82, 10]
5.   i = 4: Insert 9 into its correct position, resulting in [**3, 9, 27, 38, 43**, 82, 10]
6.   i = 5: Insert 82 into its correct position, resulting in [**3, 9, 27, 38, 43, 82**, 10] (no change)
7.   i = 6: Insert 10 into its correct position, resulting in [**3, 9, 10, 27, 38, 43, 82**]

